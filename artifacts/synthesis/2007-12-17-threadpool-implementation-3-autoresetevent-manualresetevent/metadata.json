{
  "title": "ThreadPool \u5BE6\u4F5C #3. AutoResetEvent / ManualResetEvent",
  "published": true,
  "categories": [
    "\u7CFB\u5217\u6587\u7AE0: Thread Pool \u5BE6\u4F5C"
  ],
  "tags": [
    ".NET",
    "\u4F5C\u696D\u7CFB\u7D71",
    "\u591A\u57F7\u884C\u7DD2",
    "\u6280\u8853\u96A8\u7B46"
  ],
  "tech-stacks": [
    ".NET Framework",
    "C#",
    "System.Threading",
    "AutoResetEvent",
    "ManualResetEvent",
    "Thread",
    "ThreadPool",
    "WaitHandle",
    "ThreadPriority",
    "GC"
  ],
  "keywords": [
    "Thread Pool",
    "worker thread",
    "AutoResetEvent",
    "ManualResetEvent",
    "WaitOne",
    "Set",
    "OS \u6392\u7A0B",
    "\u512A\u5148\u9806\u5E8F",
    "GC",
    "\u865B\u64EC\u8A18\u61B6\u9AD4",
    "job queue",
    "SimpleThreadPool",
    "enqueue",
    "WorkItem",
    "WaitCallback",
    "ThreadPriority",
    "blocked",
    "waiting",
    "running",
    "ManagedThreadId",
    "CancelPool",
    "EndPool",
    "Dispose"
  ],
  "generator": "BlogIndex.SyncPost v0.3.0.0, gpt-5",
  "references": [],
  "summary": "\u672C\u6587\u5EF6\u7E8C\u524D\u7BC7\uFF0C\u63A2\u8A0E Thread Pool \u559A\u9192\u9592\u7F6E worker thread \u7684\u5169\u7A2E\u7B56\u7565\uFF0C\u5206\u5225\u5C0D\u61C9\u5230 AutoResetEvent \u8207 ManualResetEvent \u7684\u884C\u70BA\u5DEE\u7570\u3002AutoResetEvent \u6BCF\u6B21 Set \u53EA\u559A\u9192\u4E00\u500B WaitOne \u5361\u4F4F\u7684 thread\uFF0C\u7B49\u540C\u5148\u5230\u5148\u8D0F\u3001\u9010\u4E00\u559A\u9192\u7684\u7B56\u7565\uFF1BManualResetEvent \u4E00\u6B21 Set \u53EF\u540C\u6642\u559A\u9192\u6240\u6709\u7B49\u5F85\u7684 threads\uFF0C\u5C07\u9078\u64C7\u6B0A\u4EA4\u7531\u4F5C\u696D\u7CFB\u7D71\u7684\u6392\u7A0B\u5668\u6C7A\u5B9A\uFF0C\u54EA\u500B thread \u5148\u88AB\u5207\u5230 running \u4FBF\u5148\u6436\u5230 job queue \u7684\u5DE5\u4F5C\u3002\u6587\u4E2D\u4EE5\u7C21\u77ED C# \u7BC4\u4F8B\u793A\u7BC4\u5169\u8005\u8F38\u51FA\u5DEE\u7570\uFF1AAutoResetEvent \u6703\u6BCF\u79D2\u53EB\u9192\u4E00\u500B thread\uFF1BManualResetEvent \u5247\u5728 Set \u5F8C\u6240\u6709 thread \u5E7E\u4E4E\u540C\u6642\u9192\u4F86\uFF0C\u986F\u793A\u559A\u9192\u9806\u5E8F\u53D7 OS \u6392\u7A0B\u3001thread \u512A\u5148\u5E8F\u3001GC\u3001\u865B\u64EC\u8A18\u61B6\u9AD4\u7B49\u56E0\u7D20\u5F71\u97FF\u3002\u63A5\u8457\u5C07\u6B64\u6982\u5FF5\u5957\u7528\u5230\u81EA\u88FD SimpleThreadPool \u7684\u8A2D\u8A08\uFF0C\u82E5\u8981\u63A1\u7528\u5148\u6392\u968A\u5148\u8D0F\u7B56\u7565\uFF0C\u53EF\u5C07 WaitHandle \u578B\u5225\u63DB\u70BA AutoResetEvent\uFF1B\u82E5\u9700\u4F9D\u5DE5\u4F5C\u7279\u6027\u5FAE\u8ABF thread priority\u3001\u8B93 OS \u6392\u7A0B\u6C7A\u5B9A\u6436\u5DE5\u4F5C\u9806\u5E8F\uFF0C\u5247\u63A1\u7528 ManualResetEvent \u8F03\u4F73\u3002\u6587\u672B\u63D0\u4F9B\u7D04\u767E\u884C\u7684 SimpleThreadPool.cs \u5B8C\u6574\u539F\u59CB\u78BC\uFF0C\u5305\u542B\u5DE5\u4F5C\u4F47\u5217\u3001\u5DE5\u4F5C\u57F7\u884C\u3001\u7D42\u6B62\u8207\u53D6\u6D88\u6A5F\u5236\uFF0C\u4F5C\u70BA\u5BE6\u4F5C\u8207\u5B78\u7FD2\u7BC4\u4F8B\u3002"
}