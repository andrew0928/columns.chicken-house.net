{
  "title": "Memory Management (II) - Test Result",
  "published": true,
  "categories": [
    "\u7CFB\u5217\u6587\u7AE0: Memory Management"
  ],
  "tags": [
    ".NET",
    "\u4F5C\u696D\u7CFB\u7D71",
    "\u6280\u8853\u96A8\u7B46"
  ],
  "tech-stacks": [
    "C",
    "C\u002B\u002B",
    ".NET",
    "Java",
    "Windows",
    "Windows Server 2003 x64",
    "Windows x86",
    "WOW64",
    "Linux",
    "x86",
    "x64",
    "/3GB",
    "/LARGEADDRESSAWARE",
    "Kernal/User address space",
    "malloc",
    "conio.h"
  ],
  "keywords": [
    "Memory Management",
    "\u8A18\u61B6\u9AD4\u7BA1\u7406",
    "virtual memory",
    "\u865B\u64EC\u8A18\u61B6\u9AD4",
    "address space",
    "\u53EF\u5B9A\u5740\u7A7A\u9593",
    "fragment",
    "\u788E\u7247\u5316",
    "defrag",
    "x86",
    "x64",
    "WOW64",
    "/3GB",
    "/LARGEADDRESSAWARE",
    "Windows 2003 x64",
    "Physical RAM",
    "Swap File",
    "Out Of Memory",
    "pointer",
    "\u6307\u6A19",
    "malloc",
    "C",
    "C\u002B\u002B",
    ".NET",
    "Java",
    "Garbage Collection",
    "GC",
    "server",
    "services",
    "LargeAddressAware"
  ],
  "generator": "BlogIndex.SyncPost v0.3.0.0, gpt-5",
  "references": [
    "/images/2008-03-03-memory-management-ii-test-result/image_11.png",
    "/images/2008-03-03-memory-management-ii-test-result/image3_1.png",
    "/images/2008-03-03-memory-management-ii-test-result/image6_1.png",
    "/post/Memory-Management---(I)-Fragment-.aspx",
    "#03",
    "#01",
    "#02"
  ],
  "summary": "\u4F5C\u8005\u4EE5\u81EA\u5BEB\u7684 C \u6E2C\u8A66\u7A0B\u5F0F\uFF0C\u5728 Windows Server 2003 x64 \u4E0A\u6BD4\u8F03\u4E09\u7A2E\u57F7\u884C\u74B0\u5883\uFF1Ax86\u3001x86 \u002B /LARGEADDRESSAWARE\uFF08\u65BC x64 \u4E0A\uFF09\u3001\u539F\u751F x64\u3002\u6E2C\u8A66\u65B9\u6CD5\u662F\u5927\u91CF\u914D\u7F6E 64MB \u5340\u584A\u3001\u91CB\u653E\u5176\u4E2D\u4E00\u534A\uFF0C\u518D\u5617\u8A66\u914D\u7F6E\u66F4\u5927\u7684 72MB \u5340\u584A\uFF0C\u89C0\u5BDF\u56E0\u8A18\u61B6\u9AD4\u788E\u7247\u5316\u5C0E\u81F4\u7684\u5927\u5340\u584A\u914D\u7F6E\u5931\u6557\u3002\u7D50\u679C\u986F\u793A\uFF1A\u5728 32 \u4F4D\u5143\u74B0\u5883\uFF08\u542B WOW64\uFF09\u5373\u4F7F\u52A0\u4E0A LargeAddressAware\uFF0C\u56E0\u53EF\u5B9A\u5740\u7A7A\u9593\u6709\u9650\u4E14\u6613\u88AB\u788E\u7247\u5316\uFF0C\u6700\u7D42\u4ECD\u7121\u6CD5\u914D\u7F6E 72MB \u9023\u7E8C\u5340\u584A\uFF1B\u4F46\u5728 x64 \u74B0\u5883\u4E0B\uFF0C\u96D6\u5BE6\u969B\u53EF\u7528\u8A18\u61B6\u9AD4\u50C5\u6578 GB\uFF0C\u537B\u56E0\u53EF\u5B9A\u5740\u7A7A\u9593\u6975\u5927\uFF088TB\uFF09\uFF0C\u4E0D\u6613\u300C\u7528\u5B8C\u300D\u800C\u80FD\u6210\u529F\u914D\u7F6E\u591A\u500B\u5927\u5340\u584A\u3002\u6587\u4E2D\u8AAA\u660E Windows 32 \u4F4D\u5143\u9810\u8A2D\u5C07 4GB \u865B\u64EC\u4F4D\u5740\u7A7A\u9593\u5283\u70BA Kernel/User \u5404 2GB\uFF0C\u53EF\u900F\u904E /3GB \u8207 /LARGEADDRESSAWARE \u63D0\u9AD8\u61C9\u7528\u7AEF\u4E0A\u9650\uFF1B\u540C\u6642\u6307\u51FA OS \u7121\u6CD5\u5C0D\u5141\u8A31\u76F4\u63A5\u64CD\u4F5C\u6307\u6A19\u7684\u8A9E\u8A00\u9032\u884C\u8A18\u61B6\u9AD4\u91CD\u6574\uFF0C\u56E0\u70BA\u642C\u79FB\u5F8C\u6307\u6A19\u5C07\u5931\u6548\u3002\u4F5C\u8005\u4E26\u9810\u544A\u5F8C\u7E8C\u5C07\u63A2\u8A0E .NET/Java \u7684 GC \u662F\u5426\u6703\u906D\u9047\u76F8\u540C\u554F\u984C\u3002"
}