{
  "title": "\u751F\u7522\u8005 vs \u6D88\u8CBB\u8005 - BlockQueue \u5BE6\u4F5C",
  "published": true,
  "categories": [
    "\u7CFB\u5217\u6587\u7AE0: \u591A\u57F7\u884C\u7DD2\u7684\u8655\u7406\u6280\u5DE7"
  ],
  "tags": [
    ".NET",
    "C#",
    "\u4F5C\u54C1\u96C6",
    "\u4F5C\u696D\u7CFB\u7D71",
    "\u591A\u57F7\u884C\u7DD2",
    "\u5C08\u6B04",
    "\u6280\u8853\u96A8\u7B46",
    "\u6709\u7684\u6C92\u7684",
    "\u7269\u4EF6\u5C0E\u5411"
  ],
  "tech-stacks": [
    ".NET",
    "C#",
    "ThreadPool",
    "Queue",
    "BlockQueue",
    "Semaphore",
    "ManualResetEvent",
    "Thread",
    "Interlocked",
    "Console",
    "ZIP",
    "NGenerics",
    "CircleQueue",
    "Priority Queue",
    "Pipeline",
    "Stream",
    "System.Collections.Generics",
    "DataStructure",
    "Operation System"
  ],
  "keywords": [
    "\u751F\u7522\u8005/\u6D88\u8CBB\u8005",
    "Producer-Consumer",
    "\u591A\u57F7\u884C\u7DD2",
    "\u4F47\u5217",
    "Queue",
    "BlockQueue",
    "EnQueue",
    "DeQueue",
    "Shutdown",
    "Thread",
    "ThreadPool",
    "Semaphore",
    "ManualResetEvent",
    "WaitOne",
    "CircleQueue",
    "Priority Queue",
    "Pipeline",
    "Stream",
    "ZIP \u58D3\u7E2E",
    "\u4E0B\u8F09",
    "IO bound",
    "CPU bound",
    "\u4F5C\u696D\u7CFB\u7D71",
    "\u6050\u9F8D\u66F8",
    "\u7BC4\u4F8B\u7A0B\u5F0F"
  ],
  "generator": "BlogIndex.SyncPost v0.3.0.0, gpt-5",
  "references": [
    "/category/Threading.aspx",
    "http://www.google.com.tw/search?complete=1\u0026hl=zh-TW\u0026q=%E6%81%90%E9%BE%8D%E7%89%88%2B%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1\u0026btnG=%E6%90%9C%E5%B0%8B\u0026meta=lr%3Dlang_zh-CN%7Clang_zh-TW\u0026aq=f\u0026oq=",
    "/images/2008-10-18-producer-vs-consumer-blockqueue-implementation/image_2.png",
    "/images/2008-10-18-producer-vs-consumer-blockqueue-implementation/image_7.png",
    "/images/2008-10-18-producer-vs-consumer-blockqueue-implementation/image_8.png",
    "http://taiwan.cnet.com/crave/0,2000088746,20130427,00.htm"
  ],
  "summary": "\u672C\u6587\u4EE5\u5BE6\u52D9\u89D2\u5EA6\u8AAA\u660E\u751F\u7522\u8005/\u6D88\u8CBB\u8005\uFF08Producer-Consumer\uFF09\u6A21\u5F0F\u5982\u4F55\u5728 C#/.NET \u4E2D\u843D\u5730\uFF0C\u4E26\u5BE6\u4F5C\u4E00\u500B\u5177\u5BB9\u91CF\u4E0A\u9650\u8207\u963B\u585E\u80FD\u529B\u7684 BlockQueue\u3002\u60C5\u5883\u7BC4\u4F8B\u70BA\u300C\u5927\u91CF\u4E0B\u8F09\u6A94\u6848\u540C\u6642\u58D3\u7E2E\u70BA ZIP\u300D\uFF1A\u4E0B\u8F09\u5C6C IO bound\u3001\u58D3\u7E2E\u70BA CPU bound\uFF0C\u5169\u968E\u6BB5\u5F7C\u6B64\u4EE5\u4F47\u5217\u89E3\u8026\u4E26\u4EE5\u5BB9\u91CF\u63A7\u5236\u5E73\u8861\u9032\u5EA6\u3002BlockQueue \u8207\u4E00\u822C Queue \u7528\u6CD5\u76F8\u4F3C\uFF0C\u4F46\u63D0\u4F9B\u4E09\u9805\u5DEE\u7570\uFF1A1) \u53EF\u8A2D\u5B9A\u5927\u5C0F\u4E0A\u9650\uFF0C\u6EFF\u8F09\u6642 EnQueue \u6703\u963B\u585E\u800C\u975E\u4E1F\u4F8B\u5916\uFF1B2) \u7A7A\u4F47\u5217\u6642 DeQueue \u6703\u963B\u585E\u800C\u975E\u4E1F\u4F8B\u5916\uFF1B3) \u652F\u63F4 Shutdown\uFF0C\u907F\u514D\u751F\u7522\u5DF2\u505C\u6B62\u6642\u6D88\u8CBB\u7AEF\u7121\u9650\u7B49\u5F85\u3002\u6587\u4E2D\u4EE5\u591A\u57F7\u884C\u7DD2 Producer/Consumer \u7BC4\u4F8B\u5C55\u793A\u5728\u4E0D\u540C\u57F7\u884C\u7DD2\u6578\u4E0B\u7684\u884C\u70BA\u8207\u6548\u679C\uFF0C\u8B49\u5BE6\u53EF\u9650\u5236\u4E2D\u9593\u5728\u9014\u6578\u91CF\u3001\u907F\u514D\u8CC7\u6E90\u7121\u9650\u5236\u64F4\u5F35\u3002BlockQueue \u4EE5 ManualResetEvent \u5BE6\u4F5C\u7B49\u5F85\u8207\u559A\u9192\u6A5F\u5236\uFF0CShutdown \u5F8C\u7981\u6B62\u518D\u5165\u5217\u4E14\u53D6\u7A7A\u5373\u7DAD\u6301\u539F\u751F\u4F8B\u5916\u884C\u70BA\u3002\u6700\u5F8C\u63D0\u51FA\u53EF\u5EF6\u4F38\u6539\u826F\uFF1A\u4EE5\u74B0\u5F62\u4F47\u5217\uFF08CircleQueue\uFF09\u6700\u4F73\u5316\u56FA\u5B9A\u5927\u5C0F\u3001\u5C0E\u5165\u512A\u5148\u6B0A\u4F47\u5217\uFF08Priority Queue\uFF09\uFF0C\u4E26\u6307\u51FA\u6B64\u6A21\u5F0F\u53EF\u62D3\u5C55\u70BA Pipeline \u8207\u4E32\u6D41\uFF08Stream\uFF09\u7B49\u8A2D\u8A08\u3002"
}