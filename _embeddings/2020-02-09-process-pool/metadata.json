{
  "title": "\u5FAE\u670D\u52D9\u57FA\u790E\u5EFA\u8A2D: Process Pool \u7684\u8A2D\u8A08\u8207\u61C9\u7528",
  "published": true,
  "categories": [
    "\u7CFB\u5217\u6587\u7AE0: .NET \u002B Windows Container, \u5FAE\u670D\u52D9\u67B6\u69CB\u8A2D\u8A08",
    "\u7CFB\u5217\u6587\u7AE0: \u67B6\u69CB\u5E2B\u89C0\u9EDE",
    "\u7CFB\u5217\u6587\u7AE0: \u67B6\u69CB\u9762\u8A66\u984C"
  ],
  "tags": [
    "microservice",
    "\u7CFB\u5217\u6587\u7AE0",
    "\u67B6\u69CB\u5E2B",
    "POC",
    "ASYNC"
  ],
  "tech-stacks": [
    "C#",
    ".NET Framework 4.7.2",
    ".NET Core 3.1",
    ".NET Standard 2.0",
    "Windows",
    "Linux",
    "Windows Container",
    "Docker",
    "Kubernetes",
    "Serverless",
    "Azure Functions",
    "AWS Lambda",
    "Knative",
    "AppDomain",
    "Process",
    "Thread",
    "Generic Host",
    "IoC Container",
    "Dependency Injection (DI)",
    "AssemblyLoadContext",
    "IPC",
    "STDIN/STDOUT",
    "Named/Anonymous Pipe",
    "BlockingCollection",
    "ManualResetEvent",
    "IAsyncResult",
    "Async/Await",
    "IAsyncEnumerable",
    "Async Streams",
    "SHA512",
    "Base64",
    "Hypervisor",
    "Hyper-V",
    "GitHub"
  ],
  "keywords": [
    "Process Pool",
    "Isolation",
    "\u9694\u96E2\u6A5F\u5236",
    "\u5FAE\u670D\u52D9",
    "Message Queue",
    "Worker",
    "Thread Pool",
    "AppDomain",
    ".NET Core",
    ".NET Framework",
    "IPC",
    "STDIO",
    "Pipe",
    "Benchmark",
    "Serverless",
    "Container",
    "Kubernetes",
    "Orchestration",
    "BlockingCollection",
    "ManualResetEvent",
    "IAsyncResult",
    "SHA512",
    "Base64",
    "BLOB",
    "Generic Host",
    "DI",
    "AssemblyLoadContext",
    "CPU Affinity",
    "Process Priority",
    "Auto Scaling",
    "Cloud Native",
    "12-factor app",
    "Windows",
    "Linux",
    "C#",
    "Node.js"
  ],
  "generator": "BlogIndex.SyncPost v0.3.0.0, gpt-5",
  "references": [
    "/images/2020-02-09-process-pool/logo.png",
    "https://zh.wikipedia.org/wiki/%E8%A1%8C%E7%A8%8B%E9%96%93%E9%80%9A%E8%A8%8A",
    "/categories/#%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0:%20Thread%20Pool%20%E5%AF%A6%E4%BD%9C",
    "https://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BC%8F%E8%A8%88%E6%95%B8%E5%99%A8",
    "https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/generic-host?view=aspnetcore-3.1",
    "https://zh.wikipedia.org/wiki/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC",
    "https://docs.microsoft.com/en-us/archive/msdn-magazine/2016/june/essential-net-dependency-injection-with-net-core",
    "https://docs.microsoft.com/en-us/dotnet/api/system.appdomain?view=netframework-4.8",
    "https://en.wikipedia.org/wiki/Process_(computing)",
    "https://en.wikipedia.org/wiki/Hypervisor",
    "https://docs.microsoft.com/zh-tw/dotnet/api/system.threading.manualresetevent?view=netframework-4.8",
    "https://docs.microsoft.com/zh-tw/dotnet/api/system.collections.concurrent.blockingcollection-1?view=netframework-4.8",
    "https://docs.microsoft.com/zh-tw/dotnet/standard/asynchronous-programming-patterns/calling-asynchronous-methods-using-iasyncresult",
    "/images/2020-02-09-process-pool/2020-02-16-21-57-06.png",
    "/images/2020-02-09-process-pool/2020-02-16-18-29-55.png",
    "/images/2020-02-09-process-pool/2020-02-16-18-39-08.png",
    "/images/2020-02-09-process-pool/2020-02-16-19-04-12.png",
    "https://docs.microsoft.com/zh-tw/archive/msdn-magazine/2018/january/csharp-all-about-span-exploring-a-new-net-mainstay",
    "https://michaelscodingspot.com/the-battle-of-c-to-json-serializers-in-net-core-3/",
    "https://www.infoq.com/articles/Async-Streams/",
    "https://dotnetcoretutorials.com/2019/01/09/iasyncenumerable-in-c-8/",
    "https://devblogs.microsoft.com/dotnet/porting-to-net-core/",
    "/2007/12/17/threadpool-%E5%AF%A6%E4%BD%9C-3-autoresetevent-manualresetevent/",
    "/images/2020-02-09-process-pool/2020-02-18-02-05-18.png",
    "/images/2020-02-09-process-pool/2020-02-18-02-14-24.png",
    "https://github.com/andrew0928/Andrew.ProcessPoolDemo"
  ],
  "summary": "\u597D\u4E45\u6C92\u5BEB\u5FAE\u670D\u52D9\u7CFB\u5217\u7684\u6587\u7AE0\u4E86\uFF0C\u9019\u7BC7\u7B97\u662F Message Queue \u7684\u9032\u968E\u7248\u672C\uFF0C\u5982\u679C\u4F60\u6709\u8D8A\u4F86\u8D8A\u591A\u7684\u4EFB\u52D9\u9700\u8981 Message Queue \u5F8C\u7AEF\u7684 Worker \u4F86\u8655\u7406\uFF0C\u5F8C\u7AEF Worker \u7684\u67B6\u69CB\u5176\u5BE6\u662F\u500B\u5F88\u6709\u610F\u601D\u7684\u67B6\u69CB\u601D\u8003\u7DF4\u7FD2\u984C\u3002\u6703\u60F3\u89E3\u6C7A\u9019\u500B\u8B70\u984C: Task Management, \u9700\u6C42\u6709\u9EDE\u985E\u4F3C serverless, \u6211\u5E0C\u671B\u6709\u500B pool \u80FD\u5F88\u5FEB\u7684\u6D88\u5316\u6389\u6211\u4E1F\u9032\u53BB\u7684 task ...\u3002\u5176\u5BE6\u6211\u9700\u8981\u7684\u67B6\u69CB\u5C31\u985E\u4F3C message queue \u002B serverless \u5C31\u80FD\u7B26\u5408\u4E86\uFF0C\u4F46\u662F\u6709\u4E9B\u56E0\u7D20, \u6211\u5F97\u8A8D\u771F\u8A55\u4F30\u81EA\u884C\u5EFA\u7F6E\u6700\u95DC\u9375\u7684\u90A3\u4E00\u584A\u8A72\u600E\u9EBC\u505A\u3002\u4E0D\u904E\u9019\u7BC7\u6211\u6C92\u6253\u7B97\u628A\u4E3B\u984C\u64F4\u7684\u90A3\u9EBC\u5927\uFF0C\u6211\u5C31\u5C08\u6CE8\u5728 Process Pool \u4E0A\u9762\u4E86\u3002\n\n\u672C\u4F86\u6253\u7B97\u5148\u8B1B\u6211\u6253\u7B97\u5982\u4F55\u89E3\u6C7A\u554F\u984C\uFF0C\u518D\u4F86\u8B1B\u5BE6\u4F5C\u7684\uFF0C\u4E0D\u904E\u67B6\u69CB\u984C\u7684\u6C7A\u7B56\uFF0C\u5F80\u5F80\u5C31\u662F\u9700\u6C42\u3001\u67B6\u69CB\u8DDF\u5BE6\u4F5C\u7684\u5E73\u8861\u554A\uFF0C\u4E0D\u5148\u4EA4\u4EE3\u4E00\u4E0B\u57FA\u672C\u7684\u5BE6\u4F5C\u6280\u8853\uFF0C\u6709\u9EDE\u8B1B\u4E0D\u4E0B\u53BB XDD\uFF0C\u6211\u6C7A\u5B9A\u5148\u82B1\u9EDE\u7BC7\u5E45\u8AAA\u660E\u7A0B\u5F0F\u78BC\u9694\u96E2\u6A5F\u5236 (Isolation) \u7684\u67B6\u69CB\u9078\u64C7\uFF0C\u518D\u4F86\u8B1B\u61C9\u7528\u8003\u91CF\uFF0C\u6700\u5F8C\u8AAA\u660E Process Pool \u7684\u5BE6\u4F5C\u3002\u6211\u5206\u4E09\u500B\u6BB5\u843D\u4F86\u8AAA\u660E\u6700\u7D42 Process Pool \u9019\u500B\u69CB\u60F3\u662F\u600E\u9EBC\u8A95\u751F\u7684:\n\n1. \u6311\u6230: Isolation \u7684\u6A5F\u5236\u7814\u7A76:  \u4E86\u89E3\u8207\u6BD4\u8F03\u5404\u7A2E\u57F7\u884C\u74B0\u5883\u9694\u96E2\u7684\u6280\u8853 (InProcess / AppDomain / Process), \u4EE5\u53CA\u5982\u4F55\u6A6B\u8DE8\u9694\u96E2\u74B0\u5883\u9032\u884C\u6709\u6548\u7387\u7684\u901A\u8A0A (IPC)  \n  \n1. \u70BA\u4F55\u9700\u8981\u5EFA\u7ACB\u9694\u96E2\u74B0\u5883:  \u4EA4\u4EE3\u6211\u5DE5\u4F5C\u5834\u5408\u9762\u81E8\u7684\u9700\u6C42\u8207\u6311\u6230\uFF0CContainer \u002B Orchestration / Serverless \u7121\u6CD5\u6EFF\u8DB3\u7684\u9700\u6C42  \n  \n1. \u6311\u6230: Process Pool \u7684\u8A2D\u8A08\u8207\u958B\u767C  \u5728\u6280\u8853\u8207\u5E73\u53F0\u7684\u9078\u64C7\u8207\u5E73\u8861, \u5982\u4F55\u8A2D\u8A08\u8207\u958B\u767C Process Pool  \n\n\u5728\u9019\u904E\u7A0B\u4E2D\uFF0C\u5176\u6642\u7528\u4E86\u5F88\u591A\u6211\u904E\u53BB\u6587\u7AE0\u500B\u5225\u63D0\u904E\u7684\u597D\u5E7E\u7A2E\u6280\u5DE7\uFF0C\u7B97\u662F\u500B\u7D42\u6975\u7684\u7D9C\u5408\u61C9\u7528\u7BC7\u5427! \u6700\u9060\u53EF\u4EE5\u8FFD\u6EAF\u5230 10 \u5E74\u524D\u90A3\u7CFB\u5217 Thread Pool \u8A2D\u8A08\u8207\u5BE6\u4F5C\u7684\u76F8\u95DC\u6587\u7AE0\u3002\u53EA\u662F\u9019\u7BC7\u7684\u61C9\u7528\uFF0C\u628A \u0022Thread\u0022 Pool \u7684\u89C0\u5FF5\uFF0C\u64F4\u5927\u5230 \u0022Process\u0022 Pool \u4E86\u3002\u73FE\u5728\u7684\u6280\u8853\uFF0CProcess \u5C64\u7D1A\u7684\u9694\u96E2\u671F\u6642\u6709\u66F4\u591A\u7684\u5DE5\u5177\u53EF\u4EE5\u904B\u7528\u4E86\uFF0C\u4F8B\u5982 Container \u5C31\u662F\u4E00\u4F8B\uFF1B\u6240\u4EE5\u904E\u7A0B\u4E2D\u6211\u4E5F\u82B1\u4E86\u4E0D\u5C11\u6642\u9593\u5728\u62FF\u634F\uFF0C\u7AD9\u5728\u5DE8\u4EBA\u7684\u80A9\u8180\u4E0A vs \u91CD\u65B0\u767C\u660E\u8F2A\u5B50 \u7684\u53D6\u6368\uFF1B\u5C0D\u9019\u90E8\u5206\u6709\u8208\u8DA3\u7684\u8B80\u8005\u5011\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8DF3\u5230\u7B2C\u4E8C\u6BB5\u3002"
}